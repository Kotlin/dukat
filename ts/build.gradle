plugins {
  id "java"
  id "com.moowork.node"
}

def packagePath = "${project.buildDir}/package"
def typescriptVersion = hasProperty("tsVersion") ? tsVersion : "3.5.2"


node {
  // https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
  version = gradle.nodeVersion
  yarnVersion = '1.16.0'

  download = true

  nodeModulesDir = file(packagePath)
}

task prepareNpmPackage(type: Copy) {
  from "package.template.json"
  into packagePath
  filter{ String line -> line.replaceAll("__TS_VERSION__", typescriptVersion) }
  rename { String fileName -> fileName.replace(".template", "") }

  from "yarn.lock"
  into packagePath
}

yarn.dependsOn = [yarnSetup, prepareNpmPackage]

task compileTs(type: NodeTask) {
  dependsOn = [yarn]
  inputs.file("./tsconfig.json")
  inputs.dir("./src")
  inputs.dir(packagePath)
  outputs.dir("./build/ts")

  script = file("${packagePath}/node_modules/typescript/bin/tsc")

  args = ["-p", "tsconfig.json"]
}


task createJar(type: Zip) {
  dependsOn = [compileTs]
  baseName 'dukatts'
  extension 'jar'
  destinationDir file("${project.buildDir}/jar")

  from('build/ts') {
    into 'js'
  }

  from("${packagePath}/node_modules/typescript/lib/tsserverlibrary.js") {
    into 'ts'
  }

  from("${packagePath}/node_modules/typescript/lib") {
    include "**/*.d.ts"
    into 'ts'
  }
}

configurations {
  dukatTsResources
}

configurations.default.extendsFrom(configurations.dukatTsResources)